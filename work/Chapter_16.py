'''
    - 프로그램은 데이터를 RAM(Random-Access Memory)에 저장한다.
    - 개발자는 디스크와 같은 비휘발성 장치를 사용하여 데이터를 저장하고, 복구할 수 있는 지속성이 필요
'''

# 1.플랫 텍스트 파일(flat text file)
'''
    - 가장 간단한 형식
    - 데이터 구조가 매우 단순하며 디스크와 메모리 간에 모든 데이터를 교환하는 경우 방법이 효율적
    - 일반 텍스트 데이터가 이런 처리에 적합
'''

# 2.패디드 텍스트 파일(padded text file)
'''
    - 페디드 텍스트 파일에서 레코드의 각 필드는 고정 너비를 가지며 파일의 해당 너비에 패딩되어 각 행(레코드)에 동일한 너비를 제공
    - seek()를 사용하여 파이릉ㄹ 탐색하고 필요한 레코드와 필드만 읽고 쓸 수 있다.
'''

# 3.표 형식 텍스트 파일
'''
    - 간단한 텍스트 파일을 사용하면 내용의 단위를 라인으로만 구분할 수 있음.
    - 때로는 이것보다 더 많을 구조를 필요할 때가 있음
        * 탭('\t'), 콤마(','), 버티컬 바('|')와 같은 문자의 구분 기호
        * 태그에 '<'와 '>'로 싸여있다 (예 : HTML, XML)
        * 구두점 (예 : JSON)
        * 들여쓰기 (예 : YAML)
'''


# 3.1 CSV
'''
    - 구분된 파일은 스프레드시트와 데이터베이스의 데이터 교환 형식으로 자주 사용
    - 열 이름이 첫번째 줄에 올 수 있음
'''

# 3.2 XML
'''
    - 가장 잘 알려진 마크업 형식.
    - 데이터를 구분하기 위해 태그를 사용
    - 데이터피드와 메시지 전송에 많이 쓰임
    - RSS(Rich Site Summary)와 아톰 같은 하위 형식이 있다.
    - XML의 두드러진 유연성은 접근법과 역량이 다른 여러 파이썬 라이브러리에 영향을 미쳤음
    - XML을 파싱하는 간단한 방법은 ElementTree 모듈을 사용하는 것.
'''

# 3.4 HTML
'''
    - 웹의 기본 문서 형식으로, 엄청난 양의 데이터가 HTML로 저장됨.
    - HTML의 대부분은 데이터를교환하기보다는 결과를 표현하는 형태로 더 많이 사용.
'''

# 3.5 JSON
'''
    - 자바스크립트를 넘어서, 데이터를 교환하는 아주 인기 있는 형식
    - JSON은 자바스크립트의 부분집합이자, 유효한 파이썬 구문
'''

# 3.7 Tablib
'''
    - 표 형식 데이터를 CSV, JSON, YAML 형식 뿐만 아니라 마이크로소프트의 엑셀, 판다스의 데이터프레임 등으로 임포트 및 익스포트, 편집할 수 있는 외부 패키지
'''

# 3.8 판다스
'''
    - 구조화된 데이터를 위한 파이썬 라이브러리
        * 많은 텍스트 및 이진 파일 형식을 읽고 쓰기
            - 콤마, 탭, 기타 문자로 구분되는 텍스트
            - 고정 너비 텍스트
            - 엑셀
            - HTML 표
            - SQL
            - HDF5
        * 그룹, 분할, 병합, 인덱스, 슬라이스, 정렬, 셀렉트, 라벨
        * 데이터 타입 변환
        * 크기 또는 모양 변경
        * 누락된 데이터 처리
        * 임의의 값 생성
        * 시계열 관리
'''

# 4.1 패디드 이진 파일과 메모리 매핑
'''
    - 이 파일은 패디드 텍스트 파일과 비슷하지만 내용은 이진 데이터이며 패딩 바이트는 공백 문자 대신 \x00을 사용
    - 각 레코드는 레코드 내의 각 필드와 마찬가지로 고정폭을 가짐. 즉, 파일 전체에서 원하는 레코드 및 필드를 찾는 것이 더 쉬워짐.
     
'''
