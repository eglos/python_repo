'''
    - 프로그램은 데이터를 RAM(Random-Access Memory)에 저장한다.
    - 개발자는 디스크와 같은 비휘발성 장치를 사용하여 데이터를 저장하고, 복구할 수 있는 지속성이 필요
'''

# 1.플랫 텍스트 파일(flat text file)
'''
    - 가장 간단한 형식
    - 데이터 구조가 매우 단순하며 디스크와 메모리 간에 모든 데이터를 교환하는 경우 방법이 효율적
    - 일반 텍스트 데이터가 이런 처리에 적합
'''

# 2.패디드 텍스트 파일(padded text file)
'''
    - 페디드 텍스트 파일에서 레코드의 각 필드는 고정 너비를 가지며 파일의 해당 너비에 패딩되어 각 행(레코드)에 동일한 너비를 제공
    - seek()를 사용하여 파이릉ㄹ 탐색하고 필요한 레코드와 필드만 읽고 쓸 수 있다.
'''

# 3.표 형식 텍스트 파일
'''
    - 간단한 텍스트 파일을 사용하면 내용의 단위를 라인으로만 구분할 수 있음.
    - 때로는 이것보다 더 많을 구조를 필요할 때가 있음
        * 탭('\t'), 콤마(','), 버티컬 바('|')와 같은 문자의 구분 기호
        * 태그에 '<'와 '>'로 싸여있다 (예 : HTML, XML)
        * 구두점 (예 : JSON)
        * 들여쓰기 (예 : YAML)
'''



